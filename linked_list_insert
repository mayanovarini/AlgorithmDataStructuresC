//insert a node into a linked list at a given position using C++

#include <stdlib.h>
#include <stdio.h>

struct Node {
  int data;
  struct Node* next;
};

struct Node* head; //a global variable named head that is of type of a pointer to Node

void insert(int data, int n) {
  Node* temp1 = new Node(); //allocating a memory on heap for temp1 that takes in the same variables as Node : data and next
  temp1 -> data = data;
  temp1 -> next = NULL;
  if (n == 1) {
    temp1 -> next = head; // the neighbor of the new node to point at the address of once was the first node and at this point head and temp1->next point at the same address
    head = temp1; //point the head now to the new node
    return;
  }
  Node* temp2 = head;
  for (int i = 0; i < n-2;i++) { // i = total jump until reaches the node right before the N
    temp2 = temp2 -> next; //traversing through the list and stop right before the address of the next node
  }
  temp1 -> next = temp2 -> next; //the new node temp1 is pointing at the neighbor of the node before the N
  temp2 -> next = temp1; //the node before N is now pointing at the new node at Nth position
} // end of insert function

void print() {
  Node* temp = head;
  while (temp != NULL) {
    printf("%d ", temp -> data);
    temp = temp -> next;
  }
  printf ("\n ");
}


int main() {
  head = NULL;
  insert(1,1);
  insert(1,2);
  insert(3,3);
  print(); // output 1 1 3
  insert(3,1);
  print(); // output 3 1 1 3
  insert(4,1); // output 4 3 1 1 3
  print();
}
